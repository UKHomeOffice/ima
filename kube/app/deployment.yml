---
apiVersion: apps/v1
kind: Deployment
metadata:
  {{ if eq .KUBE_NAMESPACE .PROD_ENV }}
  name: {{ .APP_NAME }}
  {{ else if eq .KUBE_NAMESPACE .BRANCH_ENV }}
  annotations:
    downscaler/uptime: {{ .NON_PROD_AVAILABILITY }}
  name: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
  {{ else }}
  annotations:
    downscaler/uptime: {{ .NON_PROD_AVAILABILITY }}
  name: {{ .APP_NAME }}
  {{ end }}
spec:
  selector:
    matchLabels:
      {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
      name: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
      {{ else }}
      name: {{ .APP_NAME }}
      {{ end }}
  template:
    metadata:
      labels:
        {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
        name: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
        app: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
        service: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
        {{ else }}
        name: {{ .APP_NAME }}
        app: {{ .APP_NAME }}
        service: {{ .APP_NAME }}
        {{ end }}
    spec:
      containers:
        - name: {{ .APP_NAME }}
          image: {{ .IMAGE_URL }}/{{ .IMAGE_REPO }}:{{.DRONE_COMMIT_SHA}}
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
                name: configmap-{{ .DRONE_SOURCE_BRANCH }}
                {{ else }}
                name: configmap
                {{ end }}
          env:
            # because some internal services have self signed certs
            - name: TZ
              value: Europe/London
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_HOST
              {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
              value: redis-{{ .DRONE_SOURCE_BRANCH }}
              {{ else }}
              value: redis
              {{ end }}
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: session-secret
                  key: session-secret
            - name: NOTIFY_KEY
              valueFrom:
                secretKeyRef:
                  name: notify-key
                  key: notify-key
            - name: PDF_CONVERTER_URL
              {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
              value: https://html-pdf-converter-{{ .DRONE_SOURCE_BRANCH }}:10443/convert
              {{ else }}
              value: https://html-pdf-converter:10443/convert
              {{ end }}
            - name: FILE_VAULT_URL
            {{ if eq .KUBE_NAMESPACE .PROD_ENV }}
              value: https://fv-ima.sas.homeoffice.gov.uk/file
            {{ else if eq .KUBE_NAMESPACE .STG_ENV }}
              value: https://fv-ima.stg.sas.homeoffice.gov.uk/file
            {{ else if eq .KUBE_NAMESPACE .UAT_ENV }}
              value: https://fv-ima.uat.sas-notprod.homeoffice.gov.uk/file
            {{ else if eq .KUBE_NAMESPACE .BRANCH_ENV }}
              value: https://fv-{{ .DRONE_SOURCE_BRANCH }}.branch.sas-notprod.homeoffice.gov.uk/file
            {{ end }}
            - name: KEYCLOAK_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client
                  key: secret
            - name: KEYCLOAK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client
                  key: id
            - name: KEYCLOAK_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak-user
                  key: username
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-user
                  key: password
            {{ if or (eq .KUBE_NAMESPACE .BRANCH_ENV) (eq .KUBE_NAMESPACE .UAT_ENV) (eq .KUBE_NAMESPACE .STG_ENV)}}
            - name: ALLOW_SKIP
              value: "true"
            - name: SKIP_EMAIL
              value: "sas-hof-test@digital.homeoffice.gov.uk"
            {{ end }}
            {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
            - name: DATASERVICE_SERVICE_HOST
              value: dataservice-{{ .DRONE_SOURCE_BRANCH }}
            - name: DATASERVICE_SERVICE_PORT_HTTPS
              value: "10443"
            {{ end }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  {{ if or (eq .KUBE_NAMESPACE .BRANCH_ENV) (eq .KUBE_NAMESPACE .UAT_ENV) }}
                  name: ima-s3-bucket-secret
                  {{ else }}
                  name: ima-s3-prod
                  {{ end }}
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  {{ if or (eq .KUBE_NAMESPACE .BRANCH_ENV) (eq .KUBE_NAMESPACE .UAT_ENV) }}
                  name: ima-s3-bucket-secret
                  {{ else }}
                  name: ima-s3-prod
                  {{ end }}
                  key: secret_access_key
            - name: AWS_KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  {{ if or (eq .KUBE_NAMESPACE .BRANCH_ENV) (eq .KUBE_NAMESPACE .UAT_ENV) }}
                  name: ima-s3-bucket-secret
                  {{ else }}
                  name: ima-s3-prod
                  {{ end }}
                  key: kms_key_id
            - name: AWS_BUCKET
              valueFrom:
                secretKeyRef:
                  {{ if or (eq .KUBE_NAMESPACE .BRANCH_ENV) (eq .KUBE_NAMESPACE .UAT_ENV) }}
                  name: ima-s3-bucket-secret
                  {{ else }}
                  name: ima-s3-prod
                  {{ end }}
                  key: name
          {{ if not (eq .KUBE_NAMESPACE .BRANCH_ENV) }}
          livenessProbe:
            httpGet:
              path: /healthz/ping
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz/readiness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
          {{ end }}
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
            limits:
              cpu: 250m
              memory: 512Mi
          volumeMounts:
            - mountPath: /public
              name: public
            - mountPath: /app/container-share
              name: container-share

        - name: nginx-proxy
          # nginx-proxy-govuk:v4
          image: quay.io/ukhomeofficedigital/nginx-proxy-govuk@sha256:4470064d0b1d20ae08c5fd85551576cb687f342a22d6cb456fda9b2c4ce8c8df
          resources:
            requests:
              memory: 20Mi
              cpu: 20m
            limits:
              memory: 256Mi
              cpu: 300m
          env:
            - name: PROXY_SERVICE_HOST
              value: 127.0.0.1
            - name: PROXY_SERVICE_PORT
              value: "8081"
            - name: ENABLE_UUID_PARAM
              value: "FALSE"
            - name: CLIENT_MAX_BODY_SIZE
              value: "200"
            - name: PORT_IN_HOST_HEADER
              value: "FALSE"
            - name: VERBOSE_ERROR_PAGES
              value: "TRUE"
            - name: EXTRA_NAXSI_RULES
              value: |-
                BasicRule wl:2,1000,1001,1002,1007,1008,1009,1010,1011,1013,1015,1101,1205,1314 "mz:BODY";
                BasicRule wl:0 "mz:$HEADERS_VAR:Cookie";
                BasicRule wl:1500 "mz:FILE_EXT";
            - name: ADD_NGINX_SERVER_CFG
              value: |
                add_header Cache-Control private;
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header X-XSS-Protection "1; mode=block" always;

                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Host $http_host;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_pass_request_headers on;

                location /public {
                  add_header Cache-Control max-age=86400;
                  add_header X-Frame-Options "SAMEORIGIN" always;
                  add_header X-Content-Type-Options "nosniff" always;
                  add_header X-XSS-Protection "1; mode=block" always;
                  alias /public;
                }
          ports:
            - containerPort: 10080
            - containerPort: 10443
          volumeMounts:
            - mountPath: /public
              name: public
          securityContext:
            runAsNonRoot: true

        - name: keycloak-proxy
          image: quay.io/ukhomeofficedigital/gogatekeeper:2.9.2
          resources:
            limits:
              memory: 1024Mi
              cpu: 200m
            requests:
              memory: 512Mi
          envFrom:
            - configMapRef:
                {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
                name: configmap-{{ .DRONE_SOURCE_BRANCH }}
                {{ else }}
                name: configmap
                {{ end }}
          env:
            - name: PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client
                  key: secret
            - name: PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client
                  key: id
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
          args:
            - --listen=127.0.0.1:8081
            # the url which is used to retrieve the OpenID configuration
            - --discovery-url=$(PROXY_DISCOVERY_URL)
            # the endpoint where requests are proxied to
            - --upstream-url=http://127.0.0.1:8080
            # URls that you wish to protect.
            - --resources=uri=/uan/*
            - --client-id=$(PROXY_CLIENT_ID)
            - --client-secret=$(PROXY_CLIENT_SECRET)
            - --enable-default-deny=false
            - --enable-logging=true
            - --enable-json-logging=true
            - --upstream-timeout=60s
            - --upstream-keepalive-timeout=60s
            - --upstream-tls-handshake-timeout=60s
            - --upstream-response-header-timeout=60s
            - --upstream-expect-continue-timeout=60s
            - --server-write-timeout=60s
            - --tls-min-version=tlsv1.2
            - --secure-cookie=false
          ports:
            - containerPort: 10080
            - containerPort: 10443
          securityContext:
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /public
              name: public
            - mountPath: /certs
              name: certs
            - mountPath: /etc/ssl/certs
              name: bundle
              readOnly: true

      volumes:
        - name: public
          emptyDir: {}
        - name: container-share
          emptyDir: {}
        - name: certs
          secret:
            {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
            secretName: branch-tls-external
            {{ else if not (eq .KUBE_NAMESPACE .PROD_ENV) }}
            secretName: ingress-internal
            {{ else }}
            secretName: cert-cmio
            {{ end }}
        - name: bundle
          configMap:
            name: bundle
